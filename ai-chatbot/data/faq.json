[
    {
      "question": "What technical skills do you specialize in?",
      "answer": "I specialize in full-stack development, including front-end technologies like Next.js and React, and back-end systems using NestJS and Golang. I also focus on API design, infrastructure optimization, and data analysis with Python (NumPy, Pandas)."
    },
    {
      "question": "What programming languages are you proficient in?",
      "answer": "I have strong expertise JavaScript,Tyepscript, Golang, and Python, with experience applying them to software engineering and data science projects."
    },
    {  
        "question": "Which programming languages do you currently use most?",  
        "answer": "My primary languages today are JavaScript, TypeScript, Golang, and Python. While I used Java, C, and C++ extensively during my academic projects, I now focus on modern languages for full-stack development and data solutions."  
      }, 
    {
      "question": "What tools and infrastructure do you work with?",
      "answer": "I use Git, Docker, Redis, DBMS, NGINX, Kafka, and message queues to streamline development workflows and build scalable, secure systems."
    },
    {
      "question": "Can you describe your experience with data-driven solutions?",
      "answer": "I leverage Python for data analysis and predictive modeling. My thesis applied ensemble machine learning techniques and BERT-based NLP to solve real-world problems, demonstrating my ability to extract insights from complex datasets."
    },
    {
      "question": "What is your approach to software architecture?",
      "answer": "I prioritize security, scalability, and clean architecture design, adhering to industry best practices for both front-end and back-end systems."
    },
    {
      "question": "Do you have experience with creative or design tools?",
      "answer": "Yes, I use Figma, Excalidraw, Photoshop, and Da Vinci Resolve to visualize ideas and enhance user interface designs."
    },
    {
      "question": "How do you stay updated with technology trends?",
      "answer": "I embrace lifelong learning through self-study, online courses, and hands-on experimentation to stay at the cutting edge of tech advancements."
    },
    {  
        "question": "What tools do you use for version control?",  
        "answer": "I use Git for version control, along with platforms like GitHub or GitLab, to collaborate on projects and maintain organized codebases."  
      },  
      {  
        "question": "Do you have experience with containerization tools?",  
        "answer": "Yes, I use Docker for containerization to ensure consistency across development, testing, and production environments. This helps streamline deployment and scalability."  
      },  
      {  
        "question": "Which databases or caching systems have you worked with?",  
        "answer": "I’ve worked with relational databases (e.g., MySQL, PostgreSQL) and caching systems like Redis to optimize performance and manage large-scale data efficiently."  
      },  
      {  
        "question": "How do you design and document APIs?",  
        "answer": "I design RESTful APIs with tools like Swagger/OpenAPI for documentation and Postman for testing, ensuring clarity, reliability, and ease of integration."  
      },  
      {  
        "question": "What front-end frameworks do you prefer?",  
        "answer": "I specialize in React and Next.js for building dynamic, responsive user interfaces, prioritizing performance and modern design patterns."  
      },  
      {  
        "question": "What back-end frameworks do you use?",  
        "answer": "For back-end development, I use NestJS (Node.js/TypeScript) and Golang to build secure, scalable systems with clean architecture and efficient resource management."  
      },  
      {  
        "question": "Have you worked with cloud platforms?",  
        "answer": "Yes, I’ve deployed applications using cloud services like AWS and Google Cloud Platform (GCP), leveraging tools for storage, compute, and serverless functions."  
      },  
      {  
        "question": "What tools do you use for data analysis?",  
        "answer": "I use Python libraries like NumPy and Pandas for data manipulation, along with visualization tools like Matplotlib or Jupyter Notebooks to derive actionable insights."  
      },  
      {  
        "question": "Do you use CI/CD pipelines?",  
        "answer": "Yes, I implement CI/CD pipelines using tools like GitHub Actions or Jenkins to automate testing, deployment, and ensure code quality."  
      },  
      {  
        "question": "What NLP frameworks have you worked with?",  
        "answer": "I’ve implemented NLP solutions using BERT-based models and libraries like Hugging Face Transformers during my thesis and data science projects."  
      },  
      {  
        "question": "How do you handle message brokering?",  
        "answer": "I use Kafka and RabbitMQ to manage message queues, ensuring reliable communication between distributed systems and handling high-throughput data."  
      },  
      {  
        "question": "What tools do you use for server configuration?",  
        "answer": "I configure and optimize servers using NGINX for load balancing and reverse proxying, paired with Docker for container orchestration."  
      },  
      {  
        "question": "Which design tools do you use for UI/UX?",  
        "answer": "I prototype interfaces with Figma and Excalidraw, and occasionally use Photoshop or Da Vinci Resolve for visual asset creation and editing."  
      },  
      {  
        "question": "How do you ensure code quality?",  
        "answer": "I use linters (ESLint, Prettier), unit testing frameworks (Jest, PyTest), and code reviews to maintain clean, maintainable, and error-free code."  
      } 
  ]